#!/bin/bash
# setup/linting/setup-linting.sh

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
CONFIG_DIR="$(dirname "$(realpath "$0")")/configs"
HUSKY_DIR="../../.husky"
LOG_PREFIX="husky-"

# --- –§—É–Ω–∫—Ü–∏–∏ ---
generate_log_filename() {
  # –ü–æ–ª—É—á–∞–µ–º —Ö–µ—à —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–º–º–∏—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  local commit_hash=$(git rev-parse --short HEAD 2>/dev/null || echo "pre-commit")
  echo "${HUSKY_DIR}/${LOG_PREFIX}${commit_hash}.log"
}

init_package_json() {
  [ -f "package.json" ] || { echo "{}" > "package.json"; echo "‚úì –°–æ–∑–¥–∞–Ω package.json"; }
}

add_scripts() {
  node <<EOF
  const fs = require('fs');
  try {
    const pkg = JSON.parse(fs.readFileSync('package.json'));
    pkg.scripts = {
      ...pkg.scripts,
      lint: "eslint . --max-warnings 0",
      "lint:fix": "eslint . --fix",
      format: "prettier --write .",
      prepare: "husky install",
      "husky-logs": "ls -lt ${HUSKY_DIR}/${LOG_PREFIX}*.log | head -n 5"
    };
    fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
    console.log("‚úì –°–∫—Ä–∏–ø—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã");
  } catch (e) {
    console.error("êÑÇ –û—à–∏–±–∫–∞:", e.message);
    process.exit(1);
  }
EOF
}

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç ---
echo "üîß –ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
mkdir -p "${CONFIG_DIR}"
init_package_json

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
yarn add --dev @nuxt/eslint-config @typescript-eslint/eslint-plugin eslint-plugin-vue eslint-config-prettier prettier husky lint-staged

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
cat > "${CONFIG_DIR}/eslint.config.mjs" << 'EOL'
import { createConfigForNuxt } from '@nuxt/eslint-config/flat'
export default createConfigForNuxt({
  features: {
    stylistic: true,
    tooling: true,
    vue: true
  }
})
EOL

cat > "${CONFIG_DIR}/.prettierrc" << 'EOL'
{
  "semi": false,
  "singleQuote": true,
  "printWidth": 100
}
EOL

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Husky —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –ª–æ–≥–∞–º–∏
echo "üê∂ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Husky..."
npx husky-init && yarn
mkdir -p "${HUSKY_DIR}"

cat > "${HUSKY_DIR}/pre-commit" << 'EOL'
#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

LOG_FILE="$(git rev-parse --short HEAD 2>/dev/null || echo "pre-commit")"
CURRENT_LOG="${HUSKY_DIR}/${LOG_PREFIX}${LOG_FILE}.log"

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–ª—è –∫–æ–º–º–∏—Ç–∞: ${LOG_FILE}" | tee "${CURRENT_LOG}"
npx lint-staged --verbose | tee -a "${CURRENT_LOG}"

# –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
ls -t ${HUSKY_DIR}/${LOG_PREFIX}*.log | tail -n +11 | xargs rm -f --
EOL

chmod +x "${HUSKY_DIR}/pre-commit"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ lint-staged
cat > .lintstagedrc << 'EOL'
{
  "*.{js,ts,vue}": [
    "eslint --fix --max-warnings 0",
    "prettier --write"
  ],
  "*.{json,md}": ["prettier --write"]
}
EOL

# –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è
add_scripts
yarn prepare
echo "‚úÖ –ì–æ—Ç–æ–≤–æ"

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
cat << 'EOL'

üí° –ò–ù–°–¢–†–£–ö–¶–ò–Ø:

1. –õ–æ–≥–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Å –∏–º–µ–Ω–∞–º–∏:
   .husky/husky-<commit-hash>.log
   .husky/husky-precommit.log (–µ—Å–ª–∏ –∫–æ–º–º–∏—Ç–∞ –Ω–µ—Ç)

2. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:
   yarn husky-logs       # –ü–æ–∫–∞–∂–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–æ–≥–æ–≤
   cat .husky/husky-<hash>.log # –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ª–æ–≥

3. –û—á–∏—Å—Ç–∫–∞:
   –î–æ–±–∞–≤—å—Ç–µ –≤ .gitignore:
   .husky/husky-*.log
EOL